openapi: 3.0.0
info:
 title: Bank Account Management API
 version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server
paths:
  /clients:
    get:
      summary: get clients list
      responses:
        200:
          description: List of clients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/clientResponse'
  /client:
    post:
      summary: add new client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/client'
      responses:
        200:
          description: client added successfully
          content:
            application/json:
              schema:
                type: string


  /client/{id}:
    get:
      summary: get client by id
      parameters:
        - in: path
          required: true
          name: "idClient"
      responses:
        200:
          description: founded account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clientResponse'
    put:
      summary: update client by id
      parameters:
        - in: path
          required: true
          name: "idClient"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/client'
      responses:
        200:
          description: info updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clientResponse'

  /accounts:
    get:
      summary: Get all accounts
      responses:
        '200':
          description: List of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountResponse'
  
  /account:
    post:
      summary: Create a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'

  /account/{id}/withdrawals:
    post:
      summary: Perform a withdrawal
      parameters:
        - $ref: '#/components/parameters/idAccount'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawalRequest'
      responses:
        '200':
          description: Withdrawal performed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalResponse'
  /interestRate:
    put:
      summary: update interest rate

  /soldAndLoan/{id}:
    get:
      summary: display account balance and loan permanently
      parameters:
        - $ref: '#/components/parameters/idAccount'
      responses:
        '200':
          description: Account balance and loan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResponse'
  /sold/{id}:
    get:
      summary: Check account balance on given date
      parameters:
        - $ref: '#/components/parameters/idAccount'
        - $ref: '#/components/parameters/DateQuery'
      responses:
        '200':
          description: Account balance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResponseByDate'

  /account/{id}/deposits:
    post:
      summary: Perform a deposit
      parameters:
        - $ref: '#/components/parameters/idAccount'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositRequest'
      responses:
        '201':
          description: Deposit performed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositResponse'
  /account/{id}/transfers:
    post:
      summary: Perform a transfer
      parameters:
        - $ref: '#/components/parameters/idAccount'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequest'
      responses:
        '201':
          description: Transfer performed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferResponse'
  /transaction/{id}/categorize:
    put:
      summary: Catégoriser une transaction existante
      parameters:
        - $ref: '#/components/parameters/TransactionId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCategorizationRequest'
      responses:
        '200':
          description: Transaction catégorisée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCategorizationResponse'
  /transactions/categorize:
    put:
      summary: Catégoriser plusieurs transactions à la fois
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleTransactionCategorizationRequest'
      responses:
        '200':
          description: Transactions catégorisées avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleTransactionCategorizationResponse'
  /dashboard:
    get:
      summary: Obtenir les données du tableau de bord
      parameters:
        - $ref: '#/components/parameters/DateRange'
        - $ref: '#/components/parameters/Interval'
      responses:
        '200':
          description: Données du tableau de bord obtenues avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardData'
components:
 parameters:
    idAccount:
      name: id
      in: path
      required: true
      schema:
        type: integer
    DateQuery:
      name: date
      in: query
      schema:
        type: string
        format: date
    TransactionId:
      name: id
      in: path
      required: true
      schema:
        type: integer
    DateRange:
      name: date_range
      in: query
      schema:
        type: object
        properties:
          start_date:
            type: string
            format: date
          end_date:
            type: string
            format: date
    Interval:
      name: interval
      in: query
      schema:
        type: string
        enum: [day, month]
 schemas:
   client:
     type: object
     properties:
      firstName:
         type: string
      lastName:
          type: string
      birthdate:
          type: string
          format: date
      monthlyNetSalary:
        type: number
   clientResponse:
     allOf:
       - $ref: '#/components/schemas/client'
       - properties:
           idClient:
             type: string
   Account:
      type: object
      properties:
        accountName:
          type: string
        idClient:
            type: string
   AccountResponse:
      allOf:
        - $ref: '#/components/schemas/Account'
        - properties:
            isEligible:
              type: boolean
            accountNumber:
              type: number


   WithdrawalRequest:
      type: object
      properties:
        amount:
          type: number
        reason:
          type: string 
        date:
          type: string
          format: date
   WithdrawalResponse:
      type: string
   BalanceResponse:
      type: object
      properties:
        principalBalance:
          type: number
        loans:
          type: number
        loanInterest:
          type: number
   BalanceResponseByDate:
      type: object
      properties:
        balance: 
          type: number
        date:
          type: string
          format: date
        accountId:
          type: integer
   DepositRequest:
      type: object
      properties:
        amount:
          type: number
        reason:
          type: string
        effectiveDate:
          type: string
          format: date
        registrationDate:
          type: string
          format: date
   DepositResponse:
      type: object
      properties:
        message:
          type: string
   TransferRequest:
      type: object
      properties:
        amount:
          type: number
        reason:
          type: string
        effectiveDate:
          type: string
          format: date
        registrationDate:
          type: string
          format: date
        destinationAccount:
          type: integer
        sameBank:
          type: boolean
   TransferResponse:
      type: object
      properties:
        transferReference:
          type: string
        message:
          type: string
   TransactionCategorizationRequest:
      type: object
      properties:
        category:
          type: string
        comment:
          type: string
   TransactionCategorizationResponse:
      type: object
      properties:
        message:
          type: string
   MultipleTransactionCategorizationRequest:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionCategorizationRequest'
   MultipleTransactionCategorizationResponse:
      type: object
      properties:
        message:
          type: string
   DashboardData:
      type: object
      properties:
        pie_chart_data:
          type: object
          additionalProperties:
            type: number
        custom_chart_data:
          type: object
          additionalProperties:
            type: number
